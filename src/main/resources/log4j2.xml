<?xml version="1.0" encoding="UTF-8"?>
<!-- Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置 -->
<!-- 当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!-- monitorInterval：Log4j能够自动检测修改配置 -->
<!-- 文件和重新配置本身，设置间隔秒数 -->
<configuration status="INFO" monitorInterval="1800">
	<!-- 日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
	<!-- 全局变量配置 -->
	<Properties>
		<!-- 格式化输出： -->
		<!-- %date表示日期， -->
		<!-- %thread表示线程名， -->
		<!-- %-5level：级别从左显示5个字符宽度 -->
		<!-- %msg：日志消息，%n是换行符 -->
		<!-- %logger{36} 表示 Logger 名字最长36个字符 -->
		<property name="LOG_PATTERN"
			value="%date{yyyy/MM/dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n" />

		<property name="LOG_PATTERN_1"
			value="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n" />

		<property name="LOG_PATTERN_2"
			value="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n" />
		<!-- 定义日志存储的路径，不要配置相对路径 -->
		<property name="FILE_PATH"
			value="/home/user/001/workspaces/logs/mht2html2txt/" />
		<!-- 日志文件名 -->
		<property name="FILE_NAME" value="com.mht2html2txt.allstar" />
		<!-- 日志文件后缀 -->
		<property name="FILE_NAME_SUFFIX" value=".c" />
	</Properties>

	<Appenders>
		<!-- 控制台打印日志 -->
		<Console name="ConsolePrint" target="SYSTEM_OUT">
			<PatternLayout pattern="${LOG_PATTERN_2}" />
		</Console>
		<!-- 将日志输出到指定文件fileName属性值为日志文件地址 -->
		<File name="LogFile"
			fileName="${FILE_PATH}/${FILE_NAME}${FILE_NAME_SUFFIX}" append="true">
			<PatternLayout pattern="${LOG_PATTERN_1}" />
		</File>
		<!-- -->
		<File name="TestLogFile"
			fileName="${FILE_PATH}/Test${FILE_NAME_SUFFIX}" append="true">
			<PatternLayout pattern="${LOG_PATTERN_1}" />
		</File>
		<!-- -->
		<File name="SqlSentences"
			fileName="${FILE_PATH}/SqlSentences${FILE_NAME_SUFFIX}"
			append="false">
			<PatternLayout pattern="${LOG_PATTERN}" />
		</File>

		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size， -->
		<!-- 则这size大小的日志会自动存入按[年-月-日]建立的文件夹下面，作为存档 -->
		<RollingFile name="RollingFileInformation"
			fileName="${FILE_PATH}/information${FILE_NAME_SUFFIX}"
			filePattern="${FILE_PATH}/${FILE_NAME}-information-%d{yyyy-MM-dd}_%i${FILE_NAME_SUFFIX}">
			<!-- 控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!-- interval属性用来指定多久滚动一次，默认是 1 hour -->
				<TimeBasedTriggeringPolicy interval="1" />
				<SizeBasedTriggeringPolicy size="4MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖 -->
			<DefaultRolloverStrategy max="10" />
		</RollingFile>

		<!-- 这个会打印出所有的error及以下级别的信息，每次大小超过size， -->
		<!-- 则这size大小的日志会自动存入按[年-月-日]建立的文件夹下面，作为存档 -->
		<RollingFile name="RollingFileErrors"
			fileName="${FILE_PATH}/errors${FILE_NAME_SUFFIX}"
			filePattern="${FILE_PATH}/${FILE_NAME}-information-%d{yyyy-MM-dd}_%i${FILE_NAME_SUFFIX}">
			<!-- 控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="ERROR" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!-- interval属性用来指定多久滚动一次，默认是 1 hour -->
				<TimeBasedTriggeringPolicy interval="1" />
				<SizeBasedTriggeringPolicy size="4MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖 -->
			<DefaultRolloverStrategy max="10" />
		</RollingFile>

		<!-- 打印INFO级别的日志到文件 -->
		<RollingFile name="RollingInfoRecord"
			fileName="${FILE_PATH}/InfoFile${FILE_NAME_SUFFIX}"
			filePattern="${FILE_PATH}/${FILE_NAME}-InfoFile-%d{yyyy-MM-dd}_%i${FILE_NAME_SUFFIX}">
			<PatternLayout pattern="${LOG_PATTERN}" />
			<SizeBasedTriggeringPolicy size="3MB" />
			<DefaultRolloverStrategy max="15" />
			<!-- 匹配INFO级别 -->
			<Filters>
				<ThresholdFilter level="WARN" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="INFO" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingFile>
	</Appenders>

	<Loggers>
		<!-- 配置多个logger可以指定不同类或包下打印的日志输出到不同的文件里， -->
		<!-- name属性值设置为指定的类或包, -->
		<!-- additivity设置为"false"将只作用于当前appender-ref， -->
		<!-- 即sql不会打印在root指定的appender（控制台）里，只会单独打印在指定的日志文件（mybatis.log）中 -->
		<!-- 配置mybatis打印sql 指定mapper所在包的全路径 -->
		<logger name="com.mht2html2txt.allstar.dao" level="DEBUG"
			additivity="false">
			<appender-ref ref="SqlSentences" />
		</logger>

		<!-- 将com.test包下的Test类中的级别不小于INFO的日志 -->
		<!-- 既打印到root指定的appender(控制台)中 -->
		<!-- 又单独打印到指定的日志文件（file.log）中 -->
		<logger name="com.mht2html2txt.allstar.test" level="INFO"
			additivity="true">
			<appender-ref ref="TestLogFile" />
		</logger>

		<Root level="all">
			<AppenderRef ref="ConsolePrint" level="info" />
			<AppenderRef ref="LogFile" level="info" />
			<AppenderRef ref="SqlSentences" level="info" />
			<AppenderRef ref="RollingFileInformation" level="info" />
			<AppenderRef ref="RollingInfoRecord" level="info" />
			<AppenderRef ref="RollingFileErrors" level="error" />
			<AppenderRef ref="TestLogFile" level="info" />
		</Root>
	</Loggers>

</configuration>